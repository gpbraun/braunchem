%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  ______                       _____ _                      %
%  | ___ \                     /  __ \ |                     %
%  | |_/ /_ __ __ _ _   _ _ __ | /  \/ |__   ___ _ __ ___    %
%  | ___ \ '__/ _` | | | | '_ \| |   | '_ \ / _ \ '_ ` _ \   %
%  | |_/ / | | (_| | |_| | | | | \__/\ | | |  __/ | | | | |  %
%  \____/|_|  \__,_|\__,_|_| |_|\____/_| |_|\___|_| |_| |_|  %
%                                                            %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%  The BRAUNPROBLEM Package
%
%          --  Typesetting~ Problems  -- 
%
%============================================================%
%
%  GABRIEL P. BRAUN, 2019-2021
%
%============================================================%
%
%  CONTACT: braun.pineschi@gmail.com
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                              
%   PACKAGE REQUIREMENTS AND SETUP                   
%                                              
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\RequirePackage { l3keys2e }

\ExplSyntaxOn

\tl_const:Nn \c_braunproblem_date_tl                 {2021/08/11}
\tl_const:Nn \c_braunproblem_version_major_number_tl {2}
\tl_const:Nn \c_braunproblem_version_minor_number_tl {1}
\tl_const:Nn \c_braunproblem_version_subrelease_tl   {a}
\tl_const:Nx \c_braunproblem_version_number_tl
	{
			\c_braunproblem_version_major_number_tl .
			\c_braunproblem_version_minor_number_tl
	}
\tl_const:Nx \c_braunproblem_version_tl
	{
		\c_braunproblem_version_number_tl
		\c_braunproblem_version_subrelease_tl
	}
\tl_const:Nn \c_braunproblem_info_tl { Typesetting~ Problems }

\ProvidesExplPackage
	{ braunproblem }
	{ \c_braunproblem_date_tl    }
	{ \c_braunproblem_version_tl }
	{ \c_braunproblem_info_tl    }

%============================================================%
%   VARIANTS OF KERNEL FUNCTIONS
%============================================================%

%============================================================%
%   CUSTOM LISTS FOR PROBLEMS
%============================================================%

\RequirePackage [ blank, no-files, use-aux ] { xsim } 

\RequirePackage
    { 
        siunitx,
        tasks,
        braunbox,
        braundb,
    }

%%% OPTIONS

\NewTasksEnvironment[
	label-offset = 0.667em,
    label  = { \MiniBox{\Alph*} },
	%label = { \textbf{\Alph*}~(\;\;) },
	label-align = right,
	label-width = 3em,
	item-indent = 4em,
]{options}[\item]

%%% ITEMS

\NewTasksEnvironment[
	label = { \emph{\Roman*} .},
	label-align = right,
	label-width = 3em,
    item-indent = 4em,
]{items}[\item]

%%% TASKS

\RenewTasksEnvironment[
	label = ( \alph* ),
	label-align = right,
	label-width = 2.5em,
	label-offset = 1ex,
    item-indent = 3em,
]{tasks}[\item]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                              
%   MACROS
%                                              
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\cs_set_eq:NN \BraunVFill \tex_vfill:D

% Hack for evenly spaced problems
\cs_set:Nn \braun_even_space_hack: { \section*{} \skip_vertical:n {-3em} }

\counterwithout * { subsection } { section }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                              
%   SET BRAUN TEMPLATE            
%                                              
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\box_new:N \l__braun_problem_box

\cs_set:Nn \braun_begin_problem_box:
    { 
        \bool_if:NF \l_braun_problem_breakable_bool 
            { 
                \BraunVFill
                \braun_even_space_hack: 
                \vbox_set:Nw \l__braun_problem_box 
            }
    }

\cs_set:Nn \braun_end_problem_box:
    { 
        \bool_if:NTF \l_braun_problem_breakable_bool 
            {
                \skip_vertical:N \l_braun_problem_after_skip
            }
            { 
                \vbox_set_end:
                \box_use_drop:N  \l__braun_problem_box
                \skip_vertical:N \l_braun_problem_after_skip
                \BraunVFill
            }
    }

\seq_new:N \l__braun_problem_tmp_data_seq

% #1 -> template name
% #2 -> before problem
% #3 -> after problem
\cs_set:Npn \DeclareBraunProblemTemplate #1 #2 #3
    { 
        \DeclareExerciseEnvironmentTemplate {#1}
            {
                % TODO: renew \label and \ref inside problem and solution
                \BraunNoWarning
                \tl_if_exist:NT \g_bchem_molecule_path_tl 
                    {
                        \tl_set:Nn \g_bchem_molecule_path_tl 
                            { \GetExerciseProperty{path} }
                        \tl_set:Nn \g_bchem_molecule_filename_tl
                            { \GetExerciseProperty{ID}   }
                    }
                \dim_zero:N \parindent
                \braun_begin_problem_box:
                #2
            }
            {
                #3
                %% OBSERVAÇÃO
                \GetExercisePropertyT { obs } { \paragraph { Observação } #1 }
                %% DADOS
                \bool_if:NF \g_braun_all_data_print_bool
                    {
                        \GetExercisePropertyT { data }
                            {
                                \group_begin:
                                \seq_set_split:Nnn \l__braun_problem_tmp_data_seq {,} {##1}
                                \subsubsection* { Dados } 
                                \braun_print_data:N \l__braun_problem_tmp_data_seq 
                                \group_end:
                            }
                    }
                \braun_end_problem_box:
                %\skip_vertical:n { 2em }
                \bool_if:NT \l_braun_problem_single_page_bool { \newpage }
            }
    }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                              
%   PROBLEM TEMPLATES            
%                                              
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%============================================================%
%   BRAUN
%============================================================%

\DeclareBraunProblemTemplate { braun }
    {
        \BraunHeader
            [ 
                \small\sffamily
                \GetExercisePropertyT { source }
                    { #1 \GetExercisePropertyT { year } { , ~ ##1 } } 
            ]
            { 
                \small\sffamily\bfseries
                \text_uppercase:n
                    { \GetExerciseParameter { exercise-name } } ~
                \GetExerciseProperty  { counter } 
            }
    }{}

%============================================================%
%   IME
%============================================================%

\DeclareBraunProblemTemplate { IME }
    {
        \skip_vertical:n {-1em}
        \IMEHeader
            [
                \sffamily\bfseries
                \skip_horizontal:n {2em}
                Valor: ~  \num [ detect-all, round-mode = places, round-precision = 2 ] { 1.00 }
                % \num [ detect-all, round-mode = places, round-precision = 2 ] 
                %     { \fp_eval:n { 10 / \numberofproblems } }
                \skip_horizontal:n {2em}
            ]
            {
                \sffamily\bfseries
                \GetExerciseProperty  { counter }
                \textsuperscript { a } ~
                \text_uppercase:n
                    { \GetExerciseParameter { exercise-name } }
            }
    }{}

%============================================================%
%   ITA
%============================================================%

\DeclareBraunProblemTemplate { ITA }
    {
        \paragraph
            { 
                \GetExerciseParameter { exercise-name } ~
                \GetExerciseProperty  { counter } . 
            }
    }{}

%============================================================%
%   ELEVA
%============================================================%

\DeclareBraunProblemTemplate { eleva }
    {
        \paragraph 
        {
            \SquareBox [ fill=color-1, width=1.4em, align = b, yshift=-3pt, stroke=white ]
                { 
                    \small
                    \color { white }
                    \num [ minimum-integer-digits = 2, detect-all ]
                        { \GetExerciseProperty { counter } }
                }
            \skip_horizontal:n { -1ex }
        }
        \GetExercisePropertyT{source}{ \textbf{(#1)} }\;
    }{}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                              
%   SOLUTION TEMPLATES                 
%                                              
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%============================================================%
%   ITA
%============================================================%

\DeclareExerciseEnvironmentTemplate{gaba}
{  
    \BraunNoWarning

            \tl_if_exist:NT \g_bchem_molecule_path_tl 
            {
                \tl_set:Nn \g_bchem_molecule_path_tl 
                { \GetExerciseProperty{path} }
                \tl_set:Nn \g_bchem_molecule_filename_tl
                { \GetExerciseProperty{ID} }
            }

    \subsection*{Solução}
}
{
    \BraunVFill
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                              
%   SOLUTION TEMPLATES                 
%                                              
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\DeclareExerciseType { problem }
    {
        exercise-env  = problem,
        solution-env  = solution,
        exercise-name = Problema,
        solution-name = Gabarito,
        exercise-template = braun,
        solution-template = gaba,
        exercise-heading = \subsection*,
        solution-heading = \subsection*,
    }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                              
%   PROBLEM KEYS          
%                                              
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\keys_define:nn { braun/problems }
{
    name .code:n = 
        \SetExerciseParameter { problem } { exercise-name } {#1},

    template .code:n = 
        \SetExerciseParameter { problem } { exercise-template } {#1},

    skip-after .dim_set:N = \l_braun_problem_after_skip,
    skip-after .initial:n = 5pt,

    breakable .bool_set:N = \l_braun_problem_breakable_bool,
    breakable .initial:n  = false,
    breakable .default:n  = true,

    single-page .bool_set:N = \l_braun_problem_single_page_bool,
    single-page .initial:n  = false,
    single-page .default:n  = true,

    unknown .code:n = \xsimsetup { \l_keys_key_tl = #1 },
}

\ProcessKeysOptions{ braun/problems }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                              
%   THE END!!!
%                                              
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\ExplSyntaxOff